name: Build, Package, and Deploy Java App

on:
  push:
    branches:
      - master
      - stage

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64
          cache: maven

      - name: Determine Environment (stage/prod)
        id: environment
        run: |
          if [[ "${{ github.ref_name }}" == "stage" ]]; then
            echo "env=stage" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "master" ]]; then
            echo "env=prod" >> $GITHUB_ENV
          else
            echo "Branch not supported for deployment" && exit 1
          fi

      - name: Increment Patch Version
        id: version
        run: |
          VERSION_FILE="myapp/pom.xml"
          CURRENT_VERSION=$(grep -m1 '<version>' "$VERSION_FILE" | sed 's/.*<version>\(.*\)<\/version>.*/\1/')
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          sed -i "s/<version>$CURRENT_VERSION<\/version>/<version>$NEW_VERSION<\/version>/" "$VERSION_FILE"
          echo "New version is: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update Helm Chart with New Version
        run: |
          HELM_VALUES_FILE="helm-chart/refael-task-java/values.yaml"
          CHART_FILE="helm-chart/refael-task-java/Chart.yaml"
          sed -i "s/^  tag:.*$/  tag: ${{ env.version }}/" "$HELM_VALUES_FILE"
          sed -i "s/^appVersion:.*$/appVersion: ${{ env.version }}/" "$CHART_FILE"
          echo "Helm chart updated with new version: ${{ env.version }}"

      - name: Build with Maven
        run: mvn -f myapp/pom.xml --batch-mode clean package

      - name: Package Build Artifacts
        run: mkdir -p ${{ env.env }} && cp myapp/target/*.jar ${{ env.env }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Maven Build Package
          path: ${{ env.env }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2          

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push ARM/AMD Docker Image
        run: |
          echo "Building Docker Image with tag: ${{ env.version }} for ${{ env.env }} environment..."

          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg ENV=${{ env.env }} \
            -f myapp/Dockerfile \
            -t ${{ secrets.DOCKER_USERNAME }}/refael-task-java-${{ env.env }}:${{ env.version }} \
            --push .        

      - name: Run Docker Image
        run: |
          docker run --name refael-task-java-${{ env.env }}-${{ env.version }} --user 1000:1000 ${{ secrets.DOCKER_USERNAME }}/refael-task-java-${{ env.env }}:${{ env.version }}
          sleep 5
          OUTPUT=$(docker logs refael-task-java-${{ env.env }}-${{ env.version }})
          echo "Container Output: $OUTPUT"
          echo "health_status=$OUTPUT" >> $GITHUB_ENV

      - name: Commit and Push Updated Version (if Docker container output the hello message)
        if: ${{ env.health_status == 'Hello World!, from Harel' }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          AUTHOR=$(git log -1 --pretty=format:'%an')
          git add myapp/pom.xml helm-chart/refael-task-java/values.yaml helm-chart/refael-task-java/Chart.yaml
          git commit -m "Incremented version to ${{ env.version }} (Last updated by: $AUTHOR)"
          git push

      - name: Fail the pipeline (if Docker container not output the hello message)
        if: ${{ env.health_status != 'Hello World!, from Harel' }}
        run: |
          echo "Health check failed. Skipping commit and fail the pipeline"
          exit 1